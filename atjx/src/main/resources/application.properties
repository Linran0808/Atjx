server.port=80
server.address=0.0.0.0
# Base
banner.charset=UTF-8
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.messages.encoding=UTF-8



#DataBase start
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/atjx?useUnicode=true&characterEncoding=UTF-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#DataBase end
druid.url=jdbc:mysql://127.0.0.1:3306/atjx?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
druid.username=root
druid.password=123456
driver-class-name=com.mysql.jdbc.Driver
# mongodb start
#spring.data.mongodb.uri=mongodb://localhost:27017/springboot-db
#mybatis start
mybatis.config-location=classpath:/mybatis-config.xml
#mybatis end
#thymeleaf start

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.mode=HTML5
#spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
spring.thymeleaf.suffix=.html

#spring.mvc.static-path-pattern=static/**
#spring.resources.static-locations=classpath:/static
#thymeleaf end
#uploadFileSize start
# 设置单个文件最大内存
spring.http.multipart.enabled=true
spring.http.multipart.maxFileSize=10Mb
# 设置所有文件最大内存
spring.http.multipart.maxRequestSize=100Mb
# 自定义文件上传路径
#web.upload-path=E:/Develop/Files/Photos/
#uploadFileSize end
##集成mybatis
mybatis.mapper-locations=classpath:/mapper/*Mapper.xml
spring.mail.host=smtp.exmail.qq.com
spring.mail.username=test@qq.com
spring.mail.password=test
spring.mail.from=test@qq.com
#redis
redis.host=127.0.0.1
redis.port=6379
redis.timeout=10
redis.poolMaxTotal=1000
redis.poolMaxIdle=500
redis.poolMaxWait=500
#虚拟路径
#资源映射路径为/image/**，你想在url访问的请求路径

spring.mvc.static-path-pattern=/**
spring.resources.static-locations=classpath:/static,file:/upload
web.upload-path=E:/  

#静态资源对外暴露的访问路径
#file.staticAccessPath=/upload/**
##文件上传目录（注意Linux和Windows上的目录结构不同）
##file.uploadFolder=/home/upload/
#file.uploadFolder=/upload/image


# Redis数据库索引（默认为0）
#spring.redis.database=0
## Redis服务器地址
#spring.redis.host=127.0.0.1
## Redis服务器连接端口
#spring.redis.port=6379
## Redis服务器连接密码（默认为空）
#spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=200
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=500
## 连接池中的最大空闲连接
#spring.redis.pool.max-idle=10
## 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
## 连接超时时间（毫秒）
#spring.redis.timeout=1000
#============== kafka ===================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=localhost:9092
#=============== provider  =======================
spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=test-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer



